name: Continuous Integrations whit Actions

on:
  push:
    branches:
      - "story/build-aws"
  pull_request:
    branches:
      - "story/build-aws"

permissions:
  id-token: write # obrigatório para usar autenticação OIDC
  contents: read # obrigatório para clonar o código do repositório

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTIONS_ROLE }}
          role-duration-seconds: 300 # o TTL da sessão, em segundos.
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Setup Java JDK
        uses: actions/setup-java@v3.10.0
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Build Application Jar
        working-directory: ./app
        run: ./gradlew clean build

      - name: Docker Compose Build
        working-directory: ./
        run: docker compose --env-file=app/src/main/resources/.env build

      - name: Build, tag, and push docker image to Amazon ECR
        run: |
          timestamp=$(date +'%y%m%d-%H%M')
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/entretien-backend-app:latest ${{ secrets.ECR_IMAGE_REPO_URL }}:${timestamp}
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/entretien-backend-app:latest ${{ secrets.ECR_IMAGE_REPO_URL }}:latest
          
          docker push ${{ secrets.ECR_IMAGE_REPO_URL }}:${timestamp}
          docker push ${{ secrets.ECR_IMAGE_REPO_URL }}:latest

      - name: Push to Docker Hub Container registry
        run: |
          timestamp=$(date +'%y%m%d-%H%M')
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/entretien-backend-app:latest ${{ secrets.DOCKERHUB_USERNAME }}/entretien-backend-app:${timestamp}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/entretien-backend-app:${timestamp}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/entretien-backend-app:latest